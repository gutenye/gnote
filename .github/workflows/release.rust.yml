name: Release (Rust)

env:
  name: gnote.rs

on:
  workflow_dispatch:
  push:
    paths:
      - gnote.rs/**
    tags: 
      - rs*.*.*

defaults:
  run:
    working-directory: gnote.rs

jobs:
  release:
    name: Release (${{matrix.platform}})
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest, platform: linux-amd64 }
          - { os: macos-latest, platform: macos-amd64 }
          - { os: macos-latest, platform: macos-arm64, target: aarch64-apple-darwin }
    steps:
      - uses: actions/checkout@v2
      - name: Set VERSION
        run: echo VERSION=${GITHUB_REF_NAME#rs} >> $GITHUB_ENV
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{matrix.target}}
      - name: Cache
        uses: Swatinem/rust-cache@v1
        with:
          working-directory: ${{env.name}}
      - name: Build
        run: |
          case ${{matrix.platform}} in
            macos-arm64 ) 
              SDKROOT=$(xcrun -sdk macosx --show-sdk-path) \
              MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx --show-sdk-platform-version) \
              cargo build --release --target=${{matrix.target}} && \
              mv target/aarch64-apple-darwin/release/gnote target/release/gnote-${{matrix.platform}}
              ;;
            * ) 
              cargo build --release  && \
              mv target/release/gnote target/release/gnote-${{matrix.platform}}
            ;;
          esac
      - name: Compress 
        uses: svenstaro/upx-action@v2
        with:
          file: ${{env.name}}/target/release/gnote-${{matrix.platform}}
          args: --lzma
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{env.name}}/target/release/gnote-${{matrix.platform}}
          tag_name: master